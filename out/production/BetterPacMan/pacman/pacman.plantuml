@startuml

title __PACMAN's Class Diagram__\n

  namespace pacman {
    class pacman.BlueGhost {
        - ghost_down : Image
        - ghost_left : Image
        - ghost_right : Image
        - ghost_up : Image
        + BlueGhost()
        + control()
        + draw()
        + loadImages()
    }
  }
  

  namespace pacman {
    interface pacman.Drawing {
        {abstract} + draw()
        {abstract} + loadImages()
    }
  }
  

  namespace pacman {
    class pacman.Entity {
        # SPEED : int
        # VALID_SPEED : int[]
        # direction : int
        # go : Boolean
        # x : int
        # y : int
        + pointDown()
        + pointLeft()
        + pointRight()
        + pointUp()
        # changeSpeed()
        # move()
    }
  }
  

  namespace pacman {
    class pacman.Game {
        ~ timer : Timer
        - dim : Dimension
        - dying : boolean
        - heart : Image
        - inGame : boolean
        - lives : int
        - score : int
        - smallFont : Font
        + Game()
        + actionPerformed()
        # paintComponent()
        - checkMaze()
        - death()
        - drawScore()
        - initGame()
        - initVariables()
        - loadImages()
        - moveGhosts()
        - playGame()
    }
  }
  

  namespace pacman {
    class pacman.Game.TAdapter {
        + keyPressed()
    }
  }
  

  namespace pacman {
    interface pacman.Ghost {
        {abstract} + control()
    }
  }
  

  namespace pacman {
    class pacman.Map {
        + BLOCK_SIZE : int
        + height : int
        {static} + pixels : int[][]
        + points : int
        + width : int
        + Map()
        + checkSquare()
        + completeCheck()
        + draw()
        + loadMapFromFile()
    }
  }
  

  namespace pacman {
    class pacman.Pacman {
        - pacman_down : Image
        - pacman_left : Image
        - pacman_right : Image
        - pacman_up : Image
        + Pacman()
        + draw()
        + loadImages()
    }
  }
  

  namespace pacman {
    class pacman.PinkGhost {
        ~ counter : int
        - ghost_down : Image
        - ghost_left : Image
        - ghost_right : Image
        - ghost_up : Image
        + PinkGhost()
        + control()
        + draw()
        + loadImages()
    }
  }
  

  namespace pacman {
    class pacman.Play {
        + Play()
        {static} + main()
    }
  }
  

  namespace pacman {
    class pacman.RedGhost {
        ~ dodge : boolean
        - ghost_down : Image
        - ghost_left : Image
        - ghost_right : Image
        - ghost_up : Image
        + IsDodging()
        + RedGhost()
        + control()
        + draw()
        + loadImages()
    }
  }
  

  namespace pacman {
    class pacman.YellowGhost {
        - ghost_down : Image
        - ghost_left : Image
        - ghost_right : Image
        - ghost_up : Image
        + YellowGhost()
        + control()
        + draw()
        + loadImages()
    }
  }
  

  pacman.BlueGhost .up.|> pacman.Drawing
  pacman.BlueGhost -up-|> pacman.Entity
  pacman.Game .up.|> java.awt.event.ActionListener
  pacman.Game -up-|> javax.swing.JPanel
  pacman.Game o-- pacman.Map : map
  pacman.Game o-- pacman.Pacman : pacman
  pacman.Game o-- pacman.PinkGhost : pink
  pacman.Game o-- pacman.RedGhost : red
  pacman.Game o-- pacman.YellowGhost : yellow
  pacman.Game +-down- pacman.Game.TAdapter
  pacman.Game.TAdapter -up-|> java.awt.event.KeyAdapter
  pacman.Pacman .up.|> pacman.Drawing
  pacman.Pacman -up-|> pacman.Entity
  pacman.PinkGhost .up.|> pacman.Drawing
  pacman.PinkGhost -up-|> pacman.Entity
  pacman.Play -up-|> javax.swing.JFrame
  pacman.RedGhost .up.|> pacman.Drawing
  pacman.RedGhost .up.|> pacman.Ghost
  pacman.RedGhost -up-|> pacman.Entity
  pacman.YellowGhost .up.|> pacman.Drawing
  pacman.YellowGhost -up-|> pacman.Entity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
